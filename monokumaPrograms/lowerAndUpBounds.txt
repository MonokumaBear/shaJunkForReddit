Nihilist cipher lower and upper bounds:


Assuming 1-based indexing in the Polybius square:

Minimum value: 11
Maximum value: 99
Value cannot be: Non-whole-number, 01 (1), 02 (2), 03 (3), 04 (4), 05 (5), 06 (6), 07 (7), 08 (8), 09 (9), 10, 20, 30, 40, 50, 60, 70, 80, 90


Assuming 0-based indexing in the Polybius square:

Minimum value: 00 (0)
Maximum value: 99
Value can be any whole number in the specified range


Looking for general repeating patterns in the upper and lower boundaries reveals the probable length of the key. Once the likely length of the key is revealed, the most restrictive upper and lower bounds for each character in the key can be taken, as well as all the values that are explicitly not allowed (such as values that would lead to a multiple of 10, etc.), resulting in a key of a certain length where each character has a known, narrowed-down set of values it could be. What's good about this method is it works with a high probability of (though technically not 100%) success, and definitively narrows down the possible values of keys, and doesn't even require that you know the characterset of the plaintext/Polybius square, or even the Polybius square itself. No guessing is needed at all; just the encrypted Nihilist cypher text. This is also especially useful when there are multiple layers of encryption, since you now know a range of values that the key is 100% in regardless of what the decrypted output looks like.

IDEA: Once you have a list of the possible keys (in the form of the 2-digit values), and you have some possible Polybius square(s), instead of trying any keys you can think of, possibly just print out every possible key translated via the Polybius square and just look if any of them look special.

UNRELATED IDEA:

"RIVER TIMES 2" could mean that the method of converting plaintext to encrypted text isn't actually "plain + key = encrypted," but "plain * 2 = encrypted," and then the keyword is "River" or something (would have to be like that, since two "R" characters would be duplicates). Maybe there is just a duplicate R, and 2 different values both mean "R." Even if the *2 thing is true, there are still 61 unique values/characters

OTHER IDEA: Just test out a substitution cipher checking every possible mapping between the present values and the following charactersets:
1. ASCII without the non-printable characters
2. Upper/lowercase letters, punctuation marks, parenthesis, @, etc.

*NOTE: Since he said 46ty.txt has instructions to contact him, it may very well contain the "@" character




Key found using minimum bounds (the digits are the minimum bounds of each value of the key, with the 3rd value having a minimum bound of 7 or 8 (8, as it is the most restrictive). Minimum bound pattern: 0 0 7/8 0 0 0 0. The key is 7 characters/values long.

Final output from the program after knowing that the key has a probable length of 7:

Set of possible key values:
Key length: 7
	[0, 13] - {6, 8, 5, 4, 7}
	[0, 42] - {36, 26, 16, 6, 34, 24, 14, 4, 33, 23, 13, 3, 35, 25, 15, 5, 37, 27, 17, 7}
	[10, 54] - {46, 36, 26, 16, 47, 37, 27, 17, 48, 38, 28, 18, 49, 39, 29, 19, 45, 35, 25, 15}
	[0, 35] - {26, 16, 6, 29, 19, 9, 30, 20, 10, 27, 17, 7, 28, 18, 8}
	[0, 44] - {37, 27, 17, 7, 38, 28, 18, 8, 36, 26, 16, 6, 39, 29, 19, 9, 35, 25, 15, 5}
	[0, 24] - {17, 7, 19, 9, 18, 8, 16, 6, 15, 5}
	[0, 24] - {18, 8, 19, 9, 15, 5, 17, 7, 16, 6}

Permutations: 611296875

611296875 with commas is 611,296,875 (~611 million)

The other message, "Nihilist.txt," appears to use the same key as well. Here is the key data associated with it:

Set of possible key values:
Key length: 7
	[0, 13] - {6, 5, 4, 8, 7}
	[0, 42] - {34, 24, 14, 4, 37, 27, 17, 7, 36, 26, 16, 6, 33, 23, 13, 3, 35, 25, 15, 5}
	[10, 54] - {49, 39, 29, 19, 48, 38, 28, 18, 47, 37, 27, 17, 45, 35, 25, 15, 46, 36, 26, 16}
	[0, 35] - {30, 20, 10, 26, 16, 6, 27, 17, 7, 28, 18, 8, 29, 19, 9}
	[0, 44] - {39, 29, 19, 9, 38, 28, 18, 8, 37, 27, 17, 7, 35, 25, 15, 5, 36, 26, 16, 6}
	[0, 24] - {15, 5, 17, 7, 19, 9, 16, 6, 18, 8}
	[0, 24] - {15, 5, 18, 8, 19, 9, 17, 7, 16, 6}

Permutations: 611296875


This gives us more data to narrow down the key even further. The manual combination is:

[0, 13] - {4, 5, 6, 7, 8}
[0, 42] - {3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37}
[10, 54] - {15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49}
[0, 35] - {6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 26, 27, 28, 29, 30}
[0, 44] - {5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39}
[0, 24] - {5, 6, 7, 8, 9, 15, 16, 17, 18, 19}
[0, 24] - {5, 6, 7, 8, 9, 15, 16, 17, 18, 19}

=

{0, 1, 2, 3, 9, 10, 11, 12 13}
{0, 1, 2, 8, 9, 10, 11, 12, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42}
{10, 11, 12, 13, 14, 20, 21, 22, 23, 24 30, 31, 32, 33, 34, 40, 41, 42, 43, 44}
{0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35}
{0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44}
{0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24}
{0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24}

Permutations: 9 * 23 * 24 * 21 * 25 * 15 * 15 = 586845000 = 586,845,000
Permutations assuming that the 2nd and 5th character are the same and the 6th and 7th character are the same: 9 * 15 * 24 * 21 * 15 = 1020600 = 1,020,600
NOTE: I just noticed that the last 2 values are probably the same value, which both narrows it down and makes it much more interesting. The 2nd and 5th values might also be the same. Assuming both of these are true gives us a key of the form "ABCDBEE".

NOTE: Just realized that the key itself can't have any zeros in it either, since that would mean a character is positioned at a 0-based index. So, the key value both cannot result in a plaintext value having a 0 index, and cannot itself have a 0-based index. Removing all numbers with a 0 in them from the previous combined set from the 2 encrypted messages yields the following set:

{11, 12, 13}
{11, 12, 18, 19, 21, 22, 28, 29, 31, 32, 38, 39, 41, 42}
{11, 12, 13, 14, 21, 22, 23, 24, 31, 32, 33, 34, 41, 42, 43, 44}
{11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35}
{11, 12, 13, 14, 21, 22, 23, 24, 31, 32, 33, 34, 41, 42, 43, 44}
{11, 12, 13, 14, 21, 22, 23, 24}
{11, 12, 13, 14, 21, 22, 23, 24}

Permutations: 3 * 14 * 16 * 15 * 16 * 8 * 8 = 10321920 ~ 10.3 million
Permutations assuming the 6th/7th characters are the same: 3 * 14 * 16 * 15 * 16 * 8 = 1290240 ~ 1.3 million
Permutations assuming the 2nd/5th and 6th/7th characters are the same: 3 * 8 * 16 * 15 * 8 = 46080 ~ 46.1 thousand


Possible positions in the Polybius square occupied by each character of the key:

Key[0]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[1]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│ │ │ │ │ │█│█│
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│ │ │ │ │ │█│█│
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│ │ │ │ │ │█│█│
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[2]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[3]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│█│ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│█│ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│█│ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[4]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[5]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘
Key[6]
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘

Possible position of the key in the Polybius square:
┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│█│█│█│█│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│█│█│█│ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘

So something like:

┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
│F│I│N│D│ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│H│E│R│ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
├─┼─┼─┼─┼─┼─┼─┼─┼─┤
│ │ │ │ │ │ │ │ │ │
└─┴─┴─┴─┴─┴─┴─┴─┴─┘